// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using manga_diction_backend.Services.Context;

#nullable disable

namespace fullstackbackend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240529164547_reset")]
    partial class reset
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("manga_diction_backend.Models.ClubModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ClubName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int");

                    b.Property<bool>("isMature")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("ClubInfo");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ClubName = "Jujutsu Lovers<3",
                            DateCreated = "2024-04-05 09:10:11",
                            Description = "Gege Akutami hates his readers!",
                            Image = "https://p325k7wa.twic.pics/high/jujutsu-kaisen/jujutsu-kaisen-cursed-clash/00-page-setup/JJK-header-mobile2.jpg?twic=v1/resize=760/step=10/quality=80",
                            IsDeleted = false,
                            IsPublic = true,
                            LeaderId = 1,
                            isMature = false
                        },
                        new
                        {
                            ID = 2,
                            ClubName = "Villainess Arc",
                            DateCreated = "2024-04-06 09:10:11",
                            Description = "strong and evil FLs lol",
                            Image = "https://static.animecorner.me/2022/09/villainess-manhwa-manga-novel-1024x576.png",
                            IsDeleted = false,
                            IsPublic = true,
                            LeaderId = 1,
                            isMature = false
                        },
                        new
                        {
                            ID = 3,
                            ClubName = "Psychological Manhwas",
                            DateCreated = "2024-04-10 09:10:11",
                            Description = "scared but i cant stop reading...",
                            Image = "https://static1.srcdn.com/wordpress/wp-content/uploads/2023/10/best-horror-manhwa-featured-image.jpg",
                            IsDeleted = false,
                            IsPublic = true,
                            LeaderId = 3,
                            isMature = true
                        },
                        new
                        {
                            ID = 4,
                            ClubName = "Best Webtoons",
                            DateCreated = "2024-04-11 09:10:11",
                            Description = "Talk about Webtoons!",
                            Image = "https://academychronicle.com/wp-content/uploads/2021/03/Webtoons-900x472.jpg",
                            IsDeleted = false,
                            IsPublic = true,
                            LeaderId = 3,
                            isMature = false
                        },
                        new
                        {
                            ID = 5,
                            ClubName = "Solo Leveling!",
                            DateCreated = "2024-04-11 08:10:11",
                            Description = "Rave about Solo Leveling!!!",
                            Image = "https://static1.srcdn.com/wordpress/wp-content/uploads/2023/12/solo-leveling.jpg",
                            IsDeleted = false,
                            IsPublic = true,
                            LeaderId = 3,
                            isMature = false
                        },
                        new
                        {
                            ID = 6,
                            ClubName = "Shoujo 4ever ",
                            DateCreated = "2024-04-09 10:10:11",
                            Description = "Shoujo debatably has the best mangas!",
                            Image = "https://static1.cbrimages.com/wordpress/wp-content/uploads/2022/09/shoujo-male-leads.jpg",
                            IsDeleted = false,
                            IsPublic = true,
                            LeaderId = 2,
                            isMature = false
                        });
                });

            modelBuilder.Entity("manga_diction_backend.Models.CommentModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ParentCommentId")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("CommentInfo");
                });

            modelBuilder.Entity("manga_diction_backend.Models.FavoritedModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<string>("MangaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("FavoritedInfo");
                });

            modelBuilder.Entity("manga_diction_backend.Models.FriendModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FriendId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("FriendInfo");
                });

            modelBuilder.Entity("manga_diction_backend.Models.LikesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LikedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LikesInfo");
                });

            modelBuilder.Entity("manga_diction_backend.Models.MemberModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MemberInfo");
                });

            modelBuilder.Entity("manga_diction_backend.Models.NotificationModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("NotificationInfo");
                });

            modelBuilder.Entity("manga_diction_backend.Models.PostModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateUpdated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PostInfo");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Category = "Spoilers",
                            ClubId = 1,
                            DateCreated = "2024-04-05",
                            DateUpdated = "2024-04-06",
                            Description = "I can't believe that happened! And off-screened too... TT",
                            IsDeleted = false,
                            Tags = "CH.223",
                            Title = "What happed to Gojo can't be real, right!?",
                            UserId = 1
                        },
                        new
                        {
                            ID = 2,
                            Category = "Discussion",
                            ClubId = 1,
                            DateCreated = "2024-04-06",
                            DateUpdated = "2024-04-07",
                            IsDeleted = false,
                            Title = "Who is your guys' favorite character that is currently ALIVE!?",
                            UserId = 1
                        },
                        new
                        {
                            ID = 3,
                            Category = "Discussion",
                            ClubId = 1,
                            DateCreated = "2024-04-08",
                            Description = "Why is Gege Akutami killing off EVERYBODY?????",
                            IsDeleted = true,
                            Title = "I got some words to say to Gege...",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("manga_diction_backend.Models.UserModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserInfo");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Age = 24,
                            FirstName = "halley",
                            Hash = "MYGwrD+IpxAU3sAsMzYkB824c72f6q3qqZ6DVeLn+XNhilTuCwCyPD2L8bOd/m3Mwa4dW/PVPGXhgN86wpYlEeWTfC3GFKLY4qgY5URSxQ6Sp+5N0I+Z+wNu9OmUj8gM3RDH27Cx6EP37+EAD9vZ34LWuXfDcMSB8oERSTGTnzel2yzbiOE4Mfd03ExP+7Njp2dKtemAT7y7U0Rj+A0UfcVsma1IPhdZTCK4eXu8CTp052IwKR3ngP8VGFnjMgV8I9RMFb2wlihz1o7jXWwVJql3Js1sCUNguVd/yftd+iyCMRjmbzM5qKaSyEVO0bOj8LGyPXSG81xsSzlq7KtLYw==",
                            LastName = "pham",
                            Salt = "/30Q+tbEfHNYV+VcY1x7a31f4XmOVA2yzroBOtjmH7wrp7YmdfL0NDEuVHgGi4P4IkpsVuG9EWJd2urVNqmbzw==",
                            Username = "halley"
                        },
                        new
                        {
                            ID = 2,
                            Age = 26,
                            FirstName = "sinatha",
                            Hash = "fT+cOf3xNyRCVGcPJEQxJPHail6WHIOuIiWZeMIfxoI/nogga3T/c5/ICdXTaWvksz8IztKx3sdZaMp0NvWuNRs9F40ThehO5eJjzvjvwaOa0JAY041iNykhv7iAF4WTTzouXjIogKrB3ytMsSQKcsQw+nVk5w0HMp485HF0Vgio+5kK107RafTXW84VJ0/9lh+mFoWRk/N+owXbVC6QIKo0E/9N3Au97IY7lDbKdHgkzyOt+QK/KTmKLevK85ZD2rqeJ5+CPrgOUHJHbhgmaqepxRec0Z0v6vKossEvh64pMAl+VDKCibUHCCQSTIIvv3/ZBNOJEYCkH7o0CpdisA==",
                            LastName = "chin",
                            Salt = "CRAotl001YDT/5efujzfPNZgRgsHrMX245qm4UdYEAywoKS7Q/50TjGqtagexEvicAMG6aesvktSh9Ockjo2KA==",
                            Username = "sinatha"
                        },
                        new
                        {
                            ID = 3,
                            Age = 22,
                            FirstName = "avery",
                            Hash = "NiYV4qFQHnsPgQCkcQLNujA0y1lOP7ak0PEqkhjUdpvDMQGWVcntx0QBPpuW8QFF0wOz4ugE8qacLUHCMsfYcCEqTd1Trhg29/LzcnIXHsIcyx+MVH+0UXTL4X8KFUSQ1dfdnVdlWx3/BoVrX6ue1Nm1AW00wFkr/Uku+IAzphr/yl2J6eXf9ZUdOODS2YOumOWrrl1PYWs+se9PrzGsZUnnNXYdnw8DlxuM+kkPUx+M2w0du++B9B6y/hsI32l3GBsj7QSA89DS+962hk0MOlinQgv3KO+892xD0hGeTSg/1M2/IS5s7J8yaoFbh0VJsanrke8pEua55VFzFgeodQ==",
                            LastName = "hillstrom",
                            Salt = "vYsW/2t4uzl5B4xJif8NR1jsDjOOg81fuRALEWnr5ZDRxSJGHe0P0j2940TX0sEbm/IRu48o4DByngNVhhmRjQ==",
                            Username = "avery"
                        });
                });

            modelBuilder.Entity("manga_diction_backend.Models.CommentModel", b =>
                {
                    b.HasOne("manga_diction_backend.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("manga_diction_backend.Models.LikesModel", b =>
                {
                    b.HasOne("manga_diction_backend.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
