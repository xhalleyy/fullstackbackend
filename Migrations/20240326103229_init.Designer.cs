// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using manga_diction_backend.Services.Context;

#nullable disable

namespace fullstackbackend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240326103229_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("manga_diction_backend.Models.ClubModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ClubName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Members")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserModelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserModelID");

                    b.ToTable("ClubInfo");
                });

            modelBuilder.Entity("manga_diction_backend.Models.CommentModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CommentModelID")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CommentModelID");

                    b.ToTable("CommentInfo");
                });

            modelBuilder.Entity("manga_diction_backend.Models.FavoritedModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("InProgress")
                        .HasColumnType("bit");

                    b.Property<int>("MangaId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserModelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserModelID");

                    b.ToTable("FavoritesInfo");
                });

            modelBuilder.Entity("manga_diction_backend.Models.PostModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClubModelID")
                        .HasColumnType("int");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateUpdated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClubModelID");

                    b.ToTable("PostInfo");
                });

            modelBuilder.Entity("manga_diction_backend.Models.UserModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriendList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("manga_diction_backend.Models.ClubModel", b =>
                {
                    b.HasOne("manga_diction_backend.Models.UserModel", null)
                        .WithMany("Clubs")
                        .HasForeignKey("UserModelID");
                });

            modelBuilder.Entity("manga_diction_backend.Models.CommentModel", b =>
                {
                    b.HasOne("manga_diction_backend.Models.CommentModel", null)
                        .WithMany("Comments")
                        .HasForeignKey("CommentModelID");
                });

            modelBuilder.Entity("manga_diction_backend.Models.FavoritedModel", b =>
                {
                    b.HasOne("manga_diction_backend.Models.UserModel", null)
                        .WithMany("FavoritedMangas")
                        .HasForeignKey("UserModelID");
                });

            modelBuilder.Entity("manga_diction_backend.Models.PostModel", b =>
                {
                    b.HasOne("manga_diction_backend.Models.ClubModel", null)
                        .WithMany("Posts")
                        .HasForeignKey("ClubModelID");
                });

            modelBuilder.Entity("manga_diction_backend.Models.ClubModel", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("manga_diction_backend.Models.CommentModel", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("manga_diction_backend.Models.UserModel", b =>
                {
                    b.Navigation("Clubs");

                    b.Navigation("FavoritedMangas");
                });
#pragma warning restore 612, 618
        }
    }
}
